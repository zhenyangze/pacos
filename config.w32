ARG_ENABLE("pacos", "enable pacos", "no");

if (PHP_PACOS != "no") {
  EXTENSION("pacos", "pacos.c", null, "-I"+configure_module_dirname);
  ADD_SOURCES(configure_module_dirname + "/kernel", "main.c memory.c exception.c debug.c backtrace.c object.c array.c string.c fcall.c require.c file.c operators.c math.c concat.c variables.c filter.c iterator.c exit.c time.c", "pacos");
  /* PCRE is always included on WIN32 */
  AC_DEFINE("ZEPHIR_USE_PHP_PCRE", 1, "Whether PHP pcre extension is present at compile time");
  if (PHP_JSON != "no") {
    ADD_EXTENSION_DEP("pacos", "json");
    AC_DEFINE("ZEPHIR_USE_PHP_JSON", 1, "Whether PHP json extension is present at compile time");
  }
  
  ADD_SOURCES(configure_module_dirname + "/pacos/exceptions", "pacosexception.zep.c pacosnamingnotfound.zep.c pacosrequestexception.zep.c pacosconfignotfound.zep.c pacosnamingnoaliveinstance.zep.c", "pacos");
	ADD_SOURCES(configure_module_dirname + "/pacos", "client.zep.c config.zep.c instance.zep.c 0__closure.zep.c 1__closure.zep.c", "pacos");
	ADD_SOURCES(configure_module_dirname + "/pacos/models", "beatinfo.zep.c beatresult.zep.c configinfo.zep.c serviceinstance.zep.c serviceinstancelist.zep.c", "pacos");
	ADD_SOURCES(configure_module_dirname + "/pacos/utils", "http.zep.c logs.zep.c parser.zep.c response.zep.c selector.zep.c", "pacos");
  ADD_FLAG("CFLAGS_PACOS", "/D ZEPHIR_RELEASE /Oi /Ot /Oy /Ob2 /Gs /GF /Gy /GL");
  ADD_FLAG("CFLAGS", "/D ZEPHIR_RELEASE /Oi /Ot /Oy /Ob2 /Gs /GF /Gy /GL");
  ADD_FLAG("LDFLAGS", "/LTCG");
}
